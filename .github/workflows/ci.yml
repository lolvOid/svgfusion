name: CI/CD

permissions:
  contents: write
  issues: write
  pull-requests: write
  deployments: write
  statuses: write
  id-token: write
  checks: write

on:
  push:
  pull_request:
    branches:
      - '**'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm run lint

      - name: Build packages
        run: pnpm run build

      - name: Run tests
        run: pnpm run test:coverage

      - name: Jest coverage report
        if: github.event_name == 'pull_request' && matrix.node-version == '20.x'
        uses: ArtiomTr/jest-coverage-report-action@v2.3.1
        with:
          custom-title: Coverage report
          skip-step: all
          coverage-file: ./packages/svgfusion-bundle/coverage/coverage-summary.json
          base-coverage-file: ./packages/svgfusion-bundle/coverage/coverage-summary.json

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: pnpm run build

      - name: Release svgfusion
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm run release:all

      - name: Build documentation
        env:
          GOOGLE_SITE_VERIFICATION: ${{ secrets.GOOGLE_SITE_VERIFICATION }}
        run: pnpm --filter=svgfusion-docs run build

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-artifacts
          path: packages/svgfusion-docs/build/

  release_beta:
    name: Release Beta
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: pnpm run build

      - name: Release beta svgfusion
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SEMANTIC_RELEASE_REGISTRY: 'https://npm.pkg.github.com'
          GITHUB_EVENT_NAME: 'push'
          GITHUB_REF: ${{ github.head_ref || github.ref }}
          GITHUB_SHA: ${{ github.event.pull_request.head.sha }}
        run: pnpm run release:all

      - name: Build documentation
        env:
          GOOGLE_SITE_VERIFICATION: ${{ secrets.GOOGLE_SITE_VERIFICATION }}
        run: pnpm --filter=svgfusion-docs run build

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-artifacts
          path: packages/svgfusion-docs/build/

  deploy:
    name: Production Deployment
    runs-on: ubuntu-latest
    needs: [release]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs-artifacts
          path: packages/svgfusion-docs/build/

      - name: Deploy to Netlify (Production)
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './packages/svgfusion-docs/build'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions - ${{ github.event.head_commit.message }}'
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

  deploy_preview:
    name: Preview Deployment
    runs-on: ubuntu-latest
    needs: [release_beta]
    if: github.event_name == 'pull_request' && github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs-artifacts
          path: packages/svgfusion-docs/build/

      - name: Deploy to Netlify (Preview)
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './packages/svgfusion-docs/build'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy PR #${{ github.event.number }} - ${{ github.event.pull_request.title }}'
          alias: 'preview-${{ github.event.number }}'
          enable-pull-request-comment: true
          enable-commit-comment: false
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 2
